/*
 * grunt-less-merge
 * https://github.com/oilart/grunt-less-merge.git
 *
 * Copyright (c) 2014 Alex Khrapko
 * Licensed under the MIT license.
 */

'use strict';

var path = require('path');

module.exports = function(grunt) {
  // Please see the Grunt documentation for more information regarding task
  // creation: http://gruntjs.com/creating-tasks

  grunt.registerMultiTask('less_merge', 'A grunt task to merge multiple .less files and their @import statements into a single .less file', function() {
    var css = '',
      // Merge task-specific and/or target-specific options with these defaults.
      options = this.options({
        banner: '// This file was generated by grunt-less-merge'
      }),
      banner = options.banner + '\n\n',
      dest = this.files[0].dest,
      importPattern = new RegExp(/(?:@import .*)"(.*:?)"[$;]/),
      globalImports = {},
      lessContent = ''
    ;

    function processFile(filepath, basepath) {
      lessContent += '\n\n';
      lessContent += '//  * =========================================================== * \n';
      lessContent += '//  * import: ' + filepath +' * \n';
      lessContent += '//  * =========================================================== * \n';
      lessContent += '\n\n';

      if(globalImports[filepath]!== undefined){
        // package is imported already, skip
        return;
      }else{
        globalImports[filepath] = true;
      }

      var content = grunt.file.read(filepath);
      content = content.split('\n');

      for(var i=0; i<content.length; i++){
        var line = content[i];

        if(importPattern.test(line)){
          // Import statment
          var lessPath = importPattern.exec(line);
          if(lessPath.length!=0){
            //In current dir
            var fp = path.join(basepath, '/', lessPath[1]);
            if(grunt.file.exists(fp)){
              processFile(fp, path.dirname(fp));
            }else{
              //global dir
              if(grunt.file.exists( lessPath[1])){
                processFile(lessPath[1], path.dirname(lessPath[1]));
              }
            }
          }
        } else {
          lessContent += line + '\n';
        }
      }
    }

    // Iterate over all specified file groups.
    this.files.forEach(function(f) {

      f.src.forEach(function(filepath) {
        var extension;
        // Warn on and ignore invalid source files (e.g. if nonull was set).
        if (!grunt.file.exists(filepath)) {
          grunt.log.warn('Source file "' + filepath + '" not found.');
        } else {
          console.log('importing');
          processFile(filepath, path.dirname(filepath));
        }
      });
    });

    // Write final less content into a file.
    grunt.file.write(dest, lessContent);
    grunt.log.writeln('File "' + this.files[0].dest.cyan + '" created.');
  });
};
